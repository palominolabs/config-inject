buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'com.palominolabs.config'
version = '1.0.2-SNAPSHOT'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  jcenter()
}
dependencies {
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.24'
  compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
  compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
  compile group: 'com.google.inject', name: 'guice', version: '4.0'
  compile group: 'org.skife.config', name: 'config-magic', version: '0.17'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
}

task sourceJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

// build a pom
publishing {
  publications {
    bintray(MavenPublication) {
      from components.java
      groupId project.group
      artifactId project.name
      version project.version

      artifact sourceJar {
        classifier 'sources'
      }

      artifact javadocJar {
        classifier 'javadoc'
      }
    }
  }
}

bintray {
  user = rootProject.hasProperty('bintrayUser') ? rootProject.property('bintrayUser') : 'FIXME'
  key = rootProject.hasProperty('bintrayApiKey') ? rootProject.property('bintrayApiKey') : 'FIXME'
  publications = ['bintray']

  pkg {
    repo = 'maven'
    licenses = ['Copyfree']
    vcsUrl = 'https://github.com/palominolabs/config-inject'
    name = 'com.palominolabs.config:config-inject'

    version {
      name = project.version
      released = new Date()
      if (project.isReleaseVersion) {
        vcsTag = 'v' + project.version
      }
    }
  }
}
